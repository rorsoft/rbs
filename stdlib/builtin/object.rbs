# [Object](Object) is the default root of all Ruby
# objects. [Object](Object) inherits from
# [BasicObject](https://ruby-doc.org/core-2.6.3/BasicObject.html) which
# allows creating alternate object hierarchies. Methods on
# [Object](Object) are available to all classes unless
# explicitly overridden.
# 
# [Object](Object) mixes in the
# [Kernel](https://ruby-doc.org/core-2.6.3/Kernel.html) module, making the
# built-in kernel functions globally accessible. Although the instance
# methods of [Object](Object) are defined by the
# [Kernel](https://ruby-doc.org/core-2.6.3/Kernel.html) module, we have
# chosen to document them here for clarity.
# 
# When referencing constants in classes inheriting from
# [Object](Object) you do not need to use the full
# namespace. For example, referencing `File` inside `YourClass` will find
# the top-level [File](https://ruby-doc.org/core-2.6.3/File.html) class.
# 
# In the descriptions of Object's methods, the parameter *symbol* refers
# to a symbol, which is either a quoted string or a
# [Symbol](https://ruby-doc.org/core-2.6.3/Symbol.html) (such as `:name`
# ).
class Object < BasicObject
  include Kernel
end
