# The global value `true` is the only instance of class `TrueClass` and
# represents a logically true value in boolean expressions. The class
# provides operators allowing `true` to be used in logical expressions.
class TrueClass
  public

  def !: () -> bool

  # And—Returns `false` if *obj* is `nil` or `false`, `true` otherwise.
  def &: (bool obj) -> bool

  def ===: (true) -> true
         | (untyped obj) -> false

  # Exclusive Or—Returns `true` if *obj* is `nil` or `false`, `false`
  # otherwise.
  def ^: (bool obj) -> bool

  # The string representation of `true` is "true".
  def to_s: () -> "true"

  # Or—Returns `true` . As *obj* is an argument to a method call, it is
  # always evaluated; there is no short-circuit evaluation in this case.
  def |: (bool obj) -> bool
end
